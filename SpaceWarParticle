particle = function(x,y,type,direction,size,speed,color,color2){
	this.x = x;
	this.y = y;
	this.type = type;
	this.direction = direction;
	this.size = size;
	this.speed = speed;
	this.color = color;
	this.color2 = color2;
	this.remove = false;
	switch(this.type){
		case 0:
			this.size2 = 0.00001;
			this.fade = 255;
		break;
		case 1:
			this.size2 = 1;
			this.fade = 255;
			this.speedMove = random(4,12);
			this.direction+=random(-30,30);
			this.direction2 = random(0,360);
		break;
	}
}
particle.prototype.draw = function(){
	translate(this.x,this.y);
	rotate(this.direction+this.direction2);
	scale(this.size*this.size2);
	switch(this.type){
		case 0:
			fill(this.color[0],this.color[1],this.color[2],this.fade);
			noStroke();
			ellipse(0,0,10,10);
			fill(this.color2[0],this.color2[1],this.color2[2],this.fade);
			ellipse(0,0,5,5);
		break;
		case 1:
			fill(this.color[0],this.color[1],this.color[2],this.fade);
			stroke(this.color2[0],this.color2[1],this.color2[2],this.fade);
			strokeWeight(2);
			rect(-3,-3,6,6);
		break;
	}
	scale(1/this.size/this.size2);
	rotate(-this.direction-this.direction2);
	translate(-this.x,-this.y);
}
particle.prototype.update = function(){
	switch(this.type){
		case 0:
			this.size2+=this.speed/60;
			this.fade-=this.speed*15;
		break;
		case 1:
			this.direction2+=6;
			this.fade-=this.speed*3;
			this.x+=sin(this.direction)*this.speedMove;
			this.y-=cos(this.direction)*this.speedMove;
			this.speedMove*=0.95;
		break;
	}
}
